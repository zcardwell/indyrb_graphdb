{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"genera",
				"generate_likes"
			],
			[
				"create_",
				"create_availability"
			],
			[
				"sparse",
				"sparse_labels"
			],
			[
				"train_",
				"train_patient_labels"
			],
			[
				"pati",
				"patient_label_transformer"
			],
			[
				"train",
				"train_patient_labels"
			],
			[
				"input_",
				"input_patient_label"
			],
			[
				"device",
				"device_label_transformer"
			],
			[
				"devi",
				"device_problem"
			],
			[
				"dev",
				"device_problem"
			],
			[
				"cli",
				"clinical_file"
			],
			[
				"ecosyste",
				"ecosystem_name"
			],
			[
				"eco",
				"ecosystem_name"
			],
			[
				"ecoy",
				"ecosystem_topic"
			],
			[
				"ecosystem",
				"ecosystem_topic"
			],
			[
				"relevanc",
				"relevance_score"
			],
			[
				"pill",
				"pillar_name"
			],
			[
				"content",
				"intent_profile_with_content"
			],
			[
				"get",
				"get_intent_profile_with_content"
			],
			[
				"pillar",
				"pillar_community_id"
			],
			[
				"get_intent",
				"get_intent_profile_with_content"
			],
			[
				"relevance_",
				"relevance_profile"
			],
			[
				"pillar_co",
				"pillar_community_id"
			],
			[
				"get_p",
				"get_rp_eco"
			],
			[
				"pillar_",
				"pillar_community_id"
			],
			[
				"valid",
				"validate_and_log_event"
			],
			[
				"ecoystem",
				"ecosystem_name"
			],
			[
				"ecosy",
				"ecosystem_name"
			],
			[
				"ecos",
				"ecosystem_name"
			],
			[
				"ne",
				"neo4j_uri"
			],
			[
				"decompos",
				"decompose_vec"
			],
			[
				"transfo",
				"transform_to_vec"
			],
			[
				"label",
				"labeled_data"
			],
			[
				"titl",
				"title_data"
			],
			[
				"get_av",
				"get_avg_sentence_length"
			],
			[
				"get_avg",
				"get_avg_sentence_length"
			],
			[
				"trans",
				"transform_to_vec"
			],
			[
				"transf",
				"transformed_data"
			],
			[
				"proces",
				"process_to_text"
			],
			[
				"conte",
				"contexts"
			],
			[
				"imp",
				"implied_information"
			],
			[
				"predi",
				"prediction_list"
			],
			[
				"return",
				"return_prediction"
			],
			[
				"retur",
				"return_prediction"
			],
			[
				"S3_",
				"S3_BUCKET"
			],
			[
				"word",
				"word_counts"
			],
			[
				"focus",
				"focus_label"
			],
			[
				"inver",
				"inverted_base_data"
			],
			[
				"clas",
				"classification_to_train"
			],
			[
				"class",
				"classification_report"
			],
			[
				"classi",
				"classification_to_train"
			],
			[
				"classif",
				"classification_report"
			],
			[
				"list",
				"list_of_urls"
			],
			[
				"Attrib",
				"AttributeName"
			],
			[
				"Att",
				"AttributeType"
			],
			[
				"Attr",
				"AttributeName"
			],
			[
				"text",
				"text_analytics"
			],
			[
				"tex",
				"text_analytics"
			],
			[
				"search",
				"searched_terms"
			],
			[
				"term",
				"term_results"
			],
			[
				"sep",
				"serp_return"
			],
			[
				"serp",
				"serp_pages"
			],
			[
				"info",
				"infograms"
			],
			[
				"base_",
				"base_words"
			],
			[
				"bigram",
				"bigram_probs"
			],
			[
				"bigrams",
				"bigrams"
			],
			[
				"url",
				"urllib"
			],
			[
				"crawl",
				"crawl_process"
			],
			[
				"parser",
				"parser"
			],
			[
				"allowe",
				"allowed_domains"
			],
			[
				"absolute",
				"absolute_best_color_lookup"
			],
			[
				"group",
				"rename_groups"
			],
			[
				"data",
				"data_container"
			],
			[
				"degree",
				"degree_constraint_finder"
			],
			[
				"target",
				"target_list"
			],
			[
				"docum",
				"document_list"
			],
			[
				"global",
				"global_map"
			],
			[
				"sub",
				"subgraph_color"
			],
			[
				"connecte",
				"connected_components"
			],
			[
				"algorith",
				"algorithm"
			],
			[
				"connec",
				"connected_components"
			],
			[
				"best",
				"best_enriched_g"
			],
			[
				"solution",
				"solution_graph"
			],
			[
				"color",
				"color_groups"
			],
			[
				"colo",
				"color_groups"
			],
			[
				"degre",
				"degree_constraint"
			],
			[
				"student",
				"student_limits"
			],
			[
				"assigned",
				"assigned_students"
			],
			[
				"invert",
				"invert_kv"
			],
			[
				"new_",
				"new_student_list"
			],
			[
				"grouping",
				"grouping_number"
			],
			[
				"max",
				"max_degree"
			],
			[
				"is",
				"is_potentially_solvable"
			],
			[
				"clique",
				"graph_clique_number"
			],
			[
				"inv",
				"invert_kv"
			],
			[
				"ann",
				"annealing_schedule"
			],
			[
				"__",
				"__score_definite__"
			],
			[
				"assign",
				"assigned_students"
			],
			[
				"studen",
				"student_preferences"
			],
			[
				"constraint",
				"constraint_graph"
			],
			[
				"constr",
				"constraint_graph"
			],
			[
				"sel",
				"selected_class"
			],
			[
				"enrich",
				"enriched_constraint_graph"
			],
			[
				"i",
				"i"
			],
			[
				"stud",
				"students_assinged"
			],
			[
				"project",
				"project_size_limits"
			],
			[
				"blcok",
				"block_group"
			],
			[
				"all",
				"all_resource_types"
			],
			[
				"hash_",
				"hash_seed"
			],
			[
				"name",
				"name"
			],
			[
				"input_obj",
				"input_object_2"
			],
			[
				"input",
				"input_object_2"
			],
			[
				"inpu",
				"input_object_1"
			],
			[
				"input_o",
				"input_object_1"
			],
			[
				"eval",
				"eval_der"
			],
			[
				"input_ob",
				"input_object_2"
			],
			[
				"input_obje",
				"input_object_1"
			],
			[
				"evalu",
				"eval_der_input_object_1"
			],
			[
				"eval_der_input",
				"eval_der_input_object_2"
			],
			[
				"input_boje",
				"input_object_2"
			],
			[
				"input_objec",
				"input_object_2"
			],
			[
				"stude",
				"student_limits"
			],
			[
				"block",
				"assign_block_students"
			],
			[
				"all_stud",
				"all_students_idx"
			],
			[
				"ma",
				"max_assignment_size"
			],
			[
				"all_",
				"all_students"
			]
		]
	},
	"buffers":
	[
		{
			"file": "graph_creation/tickets/ticket_example.cql",
			"settings":
			{
				"buffer_size": 1484,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import numpy as np\nimport neo4j \n\nall_availabilities = ['first','second','third']\nroles = ['manager','service clerk','office clerk','cashier']\n\n\ndef generate_people(number_of_people,seed = 314):\n    hex_codes = ['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e']\n    persons = []\n    R = np.random.RandomState(seed)\n\n    for i in range(number_of_people):\n        \n        person_id = ''.join(R.choice(hex_codes,size = 24))\n        role = R.choice(roles)\n        availability = R.choice(all_availabilities)\n        age = R.randint(low = 16, high = 65)\n        role_tenure = R.randint(low = 1, high = 10)\n        p = {'name':person_id,'role':role,'age':age,'role_tenure':role_tenure,'availability':availability}\n        persons.append(p)\n\n    return persons\n\n\n\ndef ingest(persons,driver):\n\n    for person in persons:\n\n        #create person node\n\n        create_person = f\"\"\"\n        CREATE (p:person {{name:'{person['name']}',age:{person['age']}}})\n        RETURN p\n        \"\"\"\n\n        #create role node and relationship to person\n        ##Using Merge incase it exists\n        create_role = f\"\"\"\n        MERGE (r:role {{name:'{person['role']}'}})\n        MERGE (p:person {{name:'{person['name']}'}})\n        MERGE (p)-[l:HAS_ROLE {{tenure:{person['role_tenure']}}}]->(r)\n        RETURN p,l,r\n        \"\"\"\n\n        #create availability node and relationship to person \n\n        create_availability = f\"\"\"\n        MERGE (a:availability {{name:'{person['availability']}'}})\n        MERGE (p:person {{name:'{person['name']}'}})\n        MERGE (p)-[l:HAS_AVAILABILITY]->(a)\n        RETURN p,l,a\n        \"\"\"\n\n        with driver.session() as session:\n\n            session.run(create_person)\n            session.run(create_role)\n            session.run(create_availability)\n\n\nif __name__ == \"__main__\":\n\n    #driver creation\n    g = neo4j.GraphDatabase()\n    driver = g.driver(uri=f\"neo4j://localhost:7687\",\n                  auth=(\"neo4j\", '1234'))\n\n    #graph ingestion\n    persons = generate_people(100)\n    ingest(persons,driver)\n\n\n\n\n",
			"file": "graph_creation/schedule/schedule_gen.py",
			"file_size": 2040,
			"file_write_time": 132598772810925946,
			"settings":
			{
				"buffer_size": 2040,
				"line_ending": "Unix"
			}
		},
		{
			"file": "graph_creation/schedule/schedule_me.cql",
			"settings":
			{
				"buffer_size": 1803,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"browse",
				"Preferences: Browse Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Enable Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/zcardwell/repository/indyrb_graphdb",
		"/Users/zcardwell/repository/indyrb_graphdb/graph_creation"
	],
	"file_history":
	[
		"/Users/zcardwell/repository/indyrb_graphdb/requirements.txt",
		"/Users/zcardwell/repository/indyrb_graphdb/graph_creation/tickets/ticket_gen.py",
		"/Users/zcardwell/repository/indyrb_graphdb/graph_creation/ticket_costs/ticket_gen.py",
		"/Users/zcardwell/repository/indyrb_graphdb/graph_creation/schedule/schedule_gen.py",
		"/Users/zcardwell/repository/indyrb_graphdb/graph_creation/schedule/schedule_me.cql",
		"/Users/zcardwell/repository/cobomba-cli/source/recrawl_pillars.py",
		"/Users/zcardwell/repository/gg-research/research/graph_transfer/imdrf_neo4j.py",
		"/Users/zcardwell/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/3F34ACF3-BD2F-4902-8D15-E1D89F61D9C2/4saferx-relevance_profile.csv",
		"/Users/zcardwell/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/94C24296-CDB0-4FA8-9C1A-5D34F65B5CF9/4saferx-845-relevance_profile.csv",
		"/Users/zcardwell/repository/cobomba-cli/output/hampton_26_stats.txt",
		"/Users/zcardwell/repository/cobomba-cli/output/hampton_stats.txt",
		"/Users/zcardwell/Downloads/pmn96cur.txt",
		"/Users/zcardwell/repository/cobomba-lambdas/neo4j_topic/lambda_function.py",
		"/Users/zcardwell/repository/cobomba-lambdas/neo4j_update/lambda_function.py",
		"/Users/zcardwell/Downloads/faers_ascii_2020Q1/ASCII/THER20Q1.txt",
		"/Users/zcardwell/Downloads/faers_ascii_2020Q1/ASCII/OUTC20Q1.txt",
		"/Users/zcardwell/repository/cobomba-cli/source/crawl_initialize.py",
		"/Users/zcardwell/repository/cobomba-cli/main.py",
		"/Users/zcardwell/Downloads/master_reports_cli.json",
		"/Users/zcardwell/Downloads/tjw.xb,tmbhc tfzan.txt",
		"/Users/zcardwell/repository/gg-research/research/data/base_data/clinical_code.json",
		"/Users/zcardwell/Downloads/foidevproblem.txt",
		"/Users/zcardwell/Downloads/deviceproblemcodes.txt",
		"/Users/zcardwell/Downloads/foiclass.txt",
		"/Users/zcardwell/Downloads/DEVICE2020.txt",
		"/Users/zcardwell/repository/vertex-maude-data-architecture/src/make_nodal_relationships.py",
		"/Users/zcardwell/repository/vertex-maude-data-architecture/src/make_neo4j_imdrf.py",
		"/Users/zcardwell/repository/vertex-maude-data-architecture/data/patientproblems.txt",
		"/Users/zcardwell/Downloads/device-recall-0001-of-0001.json",
		"/Users/zcardwell/Library/Mobile Documents/com~apple~CloudDocs/Downloads/device-event-0005-of-0005.json",
		"/Users/zcardwell/repository/vertex-maude-data-architecture/data/code_bases/impact_code.json",
		"/Users/zcardwell/Downloads/DEVICE2019-2.txt",
		"/Users/zcardwell/Downloads/mdrfoi.txt",
		"/Users/zcardwell/Desktop/search_push/test/base_data/deviceproblemcodes.txt",
		"/Users/zcardwell/Desktop/search_push/unit_test.py",
		"/Users/zcardwell/Documents/learning/mdr_search/indexer.py",
		"/Users/zcardwell/repository/vertex-maude-validation/data/code_jsons/device_problem.json",
		"/Users/zcardwell/repository/vertex-maude-validation/data/code_jsons/clinical_code.json",
		"/Users/zcardwell/Documents/learning/mdr_search/deviceproblemcodes.txt",
		"/Users/zcardwell/Downloads/patientproblems.txt",
		"/Users/zcardwell/repository/vertex-maude-data-architecture/test.json",
		"/Users/zcardwell/Downloads/5ff5dd378ff3771fd7a4371e.json",
		"/Users/zcardwell/Downloads/5ff5ef6864a3c121c2ba1f52.json",
		"/Users/zcardwell/Downloads/ecosystem-data.json",
		"/Users/zcardwell/Downloads/ecosystem-domain2-rank.json",
		"/Users/zcardwell/repository/cobomba-cli/src/menus/pillars/pillars.py",
		"/Volumes/GoogleDrive/Shared drives/Cobomba/Google Analytics Analysis/ga_analysis.py",
		"/Users/zcardwell/Downloads/5f90919450374c7513ed9357.json",
		"/Users/zcardwell/repository/cobomba-recommendation-functions/ranking_functions.py",
		"/Users/zcardwell/repository/cobomba-recommendation-functions/recrawl_communities.py",
		"/Users/zcardwell/repository/cobomba-recommendation-functions/topics.py",
		"/Users/zcardwell/repository/cobomba-recommendation-functions/recommendation_functions.py",
		"/Users/zcardwell/repository/cobomba-recommendation-functions/initialize_ecosystem.py",
		"/Users/zcardwell/repository/cobomba-cli/src/oldipynb.py",
		"/Users/zcardwell/repository/cobomba-lambdas/query_neo4j/query_neo4j.json",
		"/Volumes/GoogleDrive/Shared drives/Delta Faucet/census_adjacency/processing_scripts/make_store_regions.py",
		"/Users/zcardwell/Downloads/Knowledge_Competencies.json",
		"/Users/zcardwell/Downloads/09_task_categories.sql",
		"/Users/zcardwell/Downloads/03_occupation_data.sql",
		"/Users/zcardwell/Downloads/Knowledge.txt",
		"/Users/zcardwell/Downloads/2020-10-21T17-06-58-items.json",
		"/Users/zcardwell/repository/cobomba-recommendation-functions/cobomba_recipes.cql",
		"/Users/zcardwell/Downloads/covtype.info",
		"/Users/zcardwell/Downloads/Owner_Operator.txt",
		"/Users/zcardwell/Downloads/us_agent.txt",
		"/Users/zcardwell/Downloads/pmnlstmn.txt",
		"/Users/zcardwell/Documents/learning/county_adj/county_adjacency.txt",
		"/Users/zcardwell/Downloads/county_adjacency.txt",
		"/Users/zcardwell/Downloads/train_1004 (1).txt",
		"/Users/zcardwell/Downloads/README.md",
		"/Users/zcardwell/Downloads/train_10.txt",
		"/Users/zcardwell/Downloads/device_problems.json",
		"/Users/zcardwell/Documents/learning/facebook_page/facebook_large/README.txt",
		"/Users/zcardwell/Documents/learning/facebook_page/facebook_large/musae_facebook_features.json",
		"/Users/zcardwell/Documents/txt_files/poordan.txt",
		"/Users/zcardwell/Documents/txt_files/scifiwoes.txt",
		"/Users/zcardwell/Documents/learning/patient_embeddings/foidevproblem.txt",
		"/Users/zcardwell/repository/vertex-maude-data-architecture/data/deviceproblemcodes.txt",
		"/Users/zcardwell/repository/vertex-maude-data-architecture/data/patientproblemcode.txt",
		"/Users/zcardwell/repository/vertex-maude-data-architecture/data/joint_patient_device_listing.json",
		"/Users/zcardwell/repository/vertex-maude-data-architecture/data/foidevproblem.txt",
		"/Users/zcardwell/Documents/learning/owly_files/meddra_221.owl",
		"/Users/zcardwell/Downloads/5f2db58dd4b16b0e805e97aa.json",
		"/Users/zcardwell/Desktop/ranking_backup.py",
		"/Users/zcardwell/Desktop/q.py",
		"/Users/zcardwell/Documents/learning/swift_learning/Hello/Sources/Hello/Greeter.swift",
		"/Users/zcardwell/Downloads/lastfm_subset/B/I/A/TRBIACJ128F93087A9.json",
		"/Users/zcardwell/Downloads/lastfm_subset/A/A/A/TRAAAMO128F1481E7F.json",
		"/Users/zcardwell/Downloads/lastfm_subset/A/Z/U/TRAZUZS128F4242F76.json",
		"/Users/zcardwell/Desktop/backup_ranking.py",
		"/Users/zcardwell/repository/cobomba-lambdas/neo4j_recommend/lambda_function.py",
		"/Users/zcardwell/Desktop/backup_q.py",
		"/Users/zcardwell/Downloads/device-event-0001-of-0003.json",
		"/Users/zcardwell/repository/cobomba-documentation/documentation.md",
		"/Users/zcardwell/Desktop/backup_neo4j.py",
		"/Users/zcardwell/Documents/random_python_scripts/latrinas.py",
		"/Users/zcardwell/Documents/random_python_scripts/Axon.py",
		"/Users/zcardwell/Documents/random_python_scripts/feedfinder.py",
		"/Users/zcardwell/repository/cobomba-recommendation-functions/README.md",
		"/Users/zcardwell/Downloads/harpy/har.py",
		"/Users/zcardwell/repository/cobomba-classifier-functions/funky_pages.py",
		"/Users/zcardwell/Documents/learning/paid_vs_earned/finding_crap.py",
		"/Users/zcardwell/Documents/learning/paid_vs_earned/detecting_earned.py",
		"/Users/zcardwell/Documents/learning/paid_vs_earned/labels.json",
		"/Users/zcardwell/Documents/learning/paid_vs_earned/test.csv",
		"/Users/zcardwell/Desktop/yet_again_github.txt",
		"/Users/zcardwell/Desktop/metrics.py",
		"/Users/zcardwell/nltk_data/corpora/stopwords/english",
		"/Users/zcardwell/repository/VertexCobamba/classifier/classifier.py",
		"/Users/zcardwell/Documents/learning/spam_check/all_json/simple_crawl_test_high-alpha-10-pages.json-items.json",
		"/Users/zcardwell/Documents/learning/spam_check/all_json/copyblogger.com_5f3437aa0cdedf3c2f90d0c3.json",
		"/Users/zcardwell/repository/VertexCobamba/classifier/lambda_function.py",
		"/Users/zcardwell/repository/VertexCobamba/classifier/clerk.py",
		"/Volumes/GoogleDrive/Shared drives/Cobomba/Content Type Classifier/classifier/classifier.py",
		"/Users/zcardwell/Downloads/RetailInstances/txt/3_7_10_1.txt",
		"/Volumes/GoogleDrive/Shared drives/Cobomba/Content Type Classifier/spamsite/spamsites.py",
		"/Volumes/GoogleDrive/Shared drives/Research/NLP/minvecs/hopcat.py",
		"/Users/zcardwell/repository/VertexAlgos/NLP/hopcat/model/hopcat.py",
		"/Volumes/GoogleDrive/Shared drives/Cobomba/Content Type Classifier/temp_data.txt",
		"/Users/zcardwell/Desktop/zcardwell_bio.txt",
		"/Users/zcardwell/Desktop/zcardwell_bio",
		"/Users/zcardwell/Downloads/Olio-logo.svg",
		"/Users/zcardwell/repository/VertexCobamba/app/db/graph_db.py",
		"/Users/zcardwell/Downloads/serp_data/carestream_case_study_search_results/carestream/88bec43ca35029a5eda3811599d6ac15/0c27a453febc1b516daf7baae0ba3ffb.json",
		"/Users/zcardwell/Desktop/test.txt",
		"/Users/zcardwell/Desktop/cut_down.py",
		"/Users/zcardwell/Desktop/docker_image_test/app/db/db_func.py",
		"/Users/zcardwell/Desktop/docker_image_test/app/requirements.txt"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"ranomint",
			"\\/\\/.*"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "graph_creation/tickets/ticket_example.cql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1484,
						"regions":
						{
						},
						"selection":
						[
							[
								1484,
								1242
							]
						],
						"settings":
						{
							"syntax": "Packages/Cypher/sublime-cypher-master/Cypher.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "graph_creation/schedule/schedule_gen.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2040,
						"regions":
						{
						},
						"selection":
						[
							[
								1598,
								1416
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 395.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "graph_creation/schedule/schedule_me.cql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1803,
						"regions":
						{
						},
						"selection":
						[
							[
								406,
								400
							]
						],
						"settings":
						{
							"syntax": "Packages/Cypher/sublime-cypher-master/Cypher.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 92.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "indyrb_graph_presentation.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 175.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
